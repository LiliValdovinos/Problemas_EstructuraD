/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        // Si el arbol esta vacÃ­o, la profundidad es 0
        if (!root) return 0;

        // Si el nodo no tiene hijos, la profundidad es 1
        if (!root->left && !root->right) return 1;

        // Si tiene solo un hijo, calcular la profundidad para ese hijo
        if (!root->left) return minDepth(root->right) + 1;
        if (!root->right) return minDepth(root->left) + 1;

        // Si tiene ambos hijos, calcular la profundidad minima entre ambos
        return min(minDepth(root->left), minDepth(root->right)) + 1;
    }
};
